# The app manifest YAML file tells Umbrel details about our app such as the name, description, dependencies, port number to access the app, etc.

# There are currently two manifest versions: 1 and 1.1. Version 1 is the basic version and is sufficient for most apps.
# However, if your app requires the use of hooks (scripts that are run at different stages of the app lifecycle), you need to use version 1.1.
# Hooks allow you to perform custom actions at different stages of the app's lifecycle, such as before the app starts (pre-start), after the
# app installs (post-install), and more. If your app doesn't need to use hooks, you can stick with manifest version 1.
manifestVersion: 1.1

# The ID should be unique within the app store and contain only alphabets (a-z) and dashes (-).
# It should be human readable and recognizable.
# The value "umbrel-app-store" and the id of your Community App Store are reserved and cannot be used.
id: sharknoon-pixina

# Disabled apps are not shown in the app store. This is useful for apps that are still in development. (optional)
#disabled: false

# This is the name of your App. It will show up in the App Store as well as on the home screen of Umbrel.
name: Pixina

# The tagline should describe your app in one sentence. Do not use more than 100 characters.
tagline: Be part of a great artwork, made out of tousands of pixels

# This is the icon displayed in the App Store as well as on the home screen.
# The icon is only needed for community App Stores. For the official Umbrel App Store, the icon will be uploaded via the Pull Request and stored
# in a separate repostiory (https://github.com/getumbrel/umbrel-apps-gallery).
icon: https://raw.githubusercontent.com/sharknoon/umbrel-app-store/main/sharknoon-pixina/logo.svg

# The category should be one of the following: "files", "bitcoin", "media", "networking", "social", "automation", "finance", "ai" or "developer".
category: social

# The version of your app.
# The version should correspond to the version of the upstream application.
version: "1.0.0"

# The port your app is reachable from a webbrowser. This should be a number between 1024 and 65535.
port: 3636

# A description of your app. This will be shown in the App Store.
description: >-
  Pixina is a website that accompanies the creation and construction of a work of art from 
  many small physical pixels. The artwork will be a 2.5m x 2.5m (8.2ft x 8.2ft) plug-in image.


  The image of the artwork was created from April 1 - 3, 2017 on the forum Reddit in the form
  of a social experiment. For three days, Reddit users could put pixels on a 1000 x 1000 pixel
  white field. This field was called Place. However, there were limitations. For example,
  users could only place a pixel every ~5 minutes. Likewise, they only had 16 colors to choose
  from. In addition, the space was limited to one million pixels. This meant that users had to
  coordinate with each other if they wanted to paint a larger picture. In addition, the pixels
  could be overwritten again by other users, creating a battle for valuable space.


  Reddit is a forum in which users can exchange information. The forum does not focus on
  specific topics. Instead, anyone can create their own subforum (subreddit) for a specific
  topic and exchange ideas with other Reddit members there.


  The goal of this artwork is to recreate Reddit Place, which is considered a piece of
  Internet culture, in the real world. This is done by putting the pixels set by Reddit users
  on plug-in boards and thus having a representation in the real world.

# The developer of the app. This is not necessarily the submitter but the actual developer of the app.
developer: Josua Frank

# The website of the app. This should be the official website of the app.
website: https://pixina.app

# The submitter of the app. This is the person who submits the app to the App Store (probably you).
submitter: Josua Frank

# The submission URL. This should be a link to the pull request or the commit that adds the app to the App Store.
submission: https://github.com/sharknoon/umbrel-app-store

# The repository of the app. This should be a link to the repository of the app. (optional)
repo: https://github.com/sharknoon/pixina

# The support URL. This should be a link to the support page of the app.
support: https://github.com/sharknoon/umbrel-app-store

# The gallery is an array of filenames (Official App Store) or URLs (Community App Stores) to images that will be shown in the App Store.
gallery:
  - https://raw.githubusercontent.com/sharknoon/umbrel-app-store/main/sharknoon-pixina/1.png
  - https://raw.githubusercontent.com/sharknoon/umbrel-app-store/main/sharknoon-pixina/2.png
  - https://raw.githubusercontent.com/sharknoon/umbrel-app-store/main/sharknoon-pixina/3.png
  - https://raw.githubusercontent.com/sharknoon/umbrel-app-store/main/sharknoon-pixina/4.png
  - https://raw.githubusercontent.com/sharknoon/umbrel-app-store/main/sharknoon-pixina/5.png
  - https://raw.githubusercontent.com/sharknoon/umbrel-app-store/main/sharknoon-pixina/6.png
# The release notes of the app. This should be a string that describes the changes in the new version. (optional)
#releaseNotes: >-
#  This is a new version of the app.
#
#  It has some new features and some bug fixes.

# The dependencies of the app. This should be an array of IDs of apps that this app depends on. (optional)
# This gives Umbrel a list of app IDs that must be already installed in order for the user to install this app and also function.
#dependencies: []

# The permissions of the app. This should be an array of permissions that the app requires. (optional)
# Available permissions are:
# - STORAGE_DOWNLOADS: Allows the app to download files to the storage.
#permissions: []

# If the app is only accessible via a subpath, you can specify it here. (optional)
#path: /web

# If the user needs to know about a default username and password, you can specify it here. (optional)
#defaultUsername: admin
#defaultPassword: admin

# If true, Umbrel will generate a deterministic password for the app. (optional)
# It will be shown to the user in the Umbrel UI and can be used inside the docker-compose.yml as the $APP_PASSWORD variable.
# This will also override the defaultPassword if set.
#deterministicPassword: false

# If the app is optimized for the Umbrel Home (https://umbrel.com/umbrel-home), you can specify it here. (optional)
#optimizedForUmbrelHome: false

# If true, the app is only accessible via Tor. (optional)
# Users will need to access their Umbrel in a Tor browser on their remote access URL (Settings > Remote Tor access) to open the app.
#torOnly: false

# If the size of the app is known, you can specify it here. (optional)
# It will be shown on the "Install" button in the App Store.
# IMPORTANT: The size needs to be in bytes.
#installSize: 10000

# Widgets are small UI elements that can be shown on the Umbrel home screen. (optional)
# You can specify an array of widgets.
# Examples:
# The ID should be unique within the app and contain only alphabets (a-z) and dashes (-)
#- id: "disk-usage"
#  # The type of the widget. Available widgets are: "text-with-buttons", "text-with-progress",
#  # "two-stats-with-guage", "three-stats", "four-stats", "list-emoji" and "list".
#  # To see how they look, visit http://umbrel.local/stories/widgets.
#  type: "text-with-progress"
#  # How often the widget should update. See all available options here: https://github.com/vercel/ms/blob/main/readme.md
#  refresh: "1m"
#  # The endpoint to fetch the data from.
#  # The hostname is the service from the docker-compose.yml.
#  endpoint: "server:80/api/widgets/disk-usage"
#  # On click of the widget, the app will open. (optional)
#  # The link (which is actually a path) will be appended to the app's URL.
#  # When the link is an empty string, the app will open as if the icon was clicked.
#  link: "/disk-usage"
#  # An example of the widget to show off the widget in the widget picker.
#  example:
#    type: "text-with-progress"
#    link: ""
#    title: "Time Machine Usage"
#    text: "420 GB"
#    progressLabel: "580 GB left"
#    progress: 0.42

# If you are opening the terminal of an app (Settings > Advanced settings > Terminal), you can specify the default docker compose service name here. (optional)
# This is useful, if you have multiple services in your docker-compose.yml and want to open the terminal of a specific service.
#defaultShell: app
